# Secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: masterdata-api-certs
type: Opaque
data:
  ca.pem: {{ .Values.masterdata.ca | b64enc }}
  client.pem: {{ .Values.masterdata.cert | b64enc }}
  client-key.pem: {{ .Values.masterdata.certKey | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: api-certs
type: Opaque
data:
  ca.pem: {{ .Values.api.ca | b64enc }}
  server.pem: {{ .Values.api.cert | b64enc }}
  server-key.pem: {{ .Values.api.certKey | b64enc }}

{{- if .Values.gardener.kubeconfig }}
---
apiVersion: v1
kind: Secret
metadata:
  name: gardener-kubeconfig
type: Opaque
data:
  kubeconfig: {{ .Values.gardener.kubeconfig | b64enc }}
{{- end }}
# Setup Stripe
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-server-stripe-config
  labels:
    app: api-server
data:
  stripe-config: {{ quote .Values.api.stripe.configYaml }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: api-server-setup-stripe
  labels:
    app: api-server
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
        - name: api-server
          image: "{{ .Values.api.image.name }}:{{ .Values.api.image.tag }}"
          env:
            - name: SESSION_SECRET
              value: "{{ .Values.api.sessionSecret }}"
          args:
            - --log-level={{ .Values.api.logLevel }}
            - --gh-client-id={{ .Values.api.github.clientID }}
            - --gh-client-secret={{ .Values.api.github.clientSecret }}
            - --az-application-id={{ .Values.api.azure.applicationID }}
            - --az-client-secret={{ .Values.api.azure.clientSecret }}
            - --stripe-secret-key={{ .Values.api.stripe.secretKey }}
            - --stripe-config-path=/app-config/stripe-config.yaml
            - setup-stripe
          volumeMounts:
            - name: stripe-config
              mountPath: /app-config
      volumes:
        - name: stripe-config
          configMap:
            name: api-server-stripe-config
            items:
              - key: stripe-config
                path: stripe-config.yaml
      restartPolicy: Never
# Server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-server
  name: api-server
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      containers:
      - image: {{ .Values.api.image.name }}:{{ .Values.api.image.tag }}
        name: api-server
        env:
          - name: SESSION_SECRET
            value: "{{  .Values.api.sessionSecret }}"
          - name: FRONT_END_URL
            value: "{{  .Values.frontend.url }}"
        args:
          - --log-level={{  .Values.api.logLevel }}
          - --grpc-server-endpoint=0.0.0.0:9090
          - --http-server-endpoint=0.0.0.0:8080
          - --server-http-url={{ .Values.api.url }}
          - --gh-client-id={{ .Values.api.github.clientID }}
          - --gh-client-secret={{ .Values.api.github.clientSecret }}
          - --az-application-id={{ .Values.api.azure.applicationID }}
          - --az-client-secret={{ .Values.api.azure.clientSecret }}
          - --stripe-secret-key={{ .Values.api.stripe.secretKey }}
          - --server-ca-path=/api-certs/ca.pem
          - --server-cert-path=/api-certs/server.pem
          - --server-key-path=/api-certs/server-key.pem
          - --masterdata-api-hostname={{ .Values.masterdata.hostname }}
          - --masterdata-api-port={{ .Values.masterdata.port }}
          - --masterdata-api-hmac={{ .Values.masterdata.hmac }}
          - --metal-api-url={{ .Values.metal.url }}
          - --metal-api-hmac={{ .Values.metal.hmac }}
          - --auditing-url={{ .Values.auditing.url }}
          - --auditing-api-key={{ .Values.auditing.key }}
          - --auditing-enabled={{ if .Values.auditing.url }}true{{ else }}false{{end}}
          - --jwt-token-secret={{ .Values.api.jwtTokenSecret }}
{{- if .Values.gardener.kubeconfig }}
          - --gardener-kubeconfig=/gardener/kubeconfig
{{- else }}
          - --stage=DEV
{{- end }}
        volumeMounts:
        - name: api-certs
          mountPath: /api-certs/
        - name: masterdata-api-certs
          mountPath: /certs/
{{- if .Values.gardener.kubeconfig }}
        - name: gardener
          mountPath: /gardener/
{{- end }}
      volumes:
        - name: api-certs
          secret:
            secretName: api-certs
        - name: masterdata-api-certs
          secret:
            secretName: masterdata-api-certs
{{- if .Values.gardener.kubeconfig }}
        - name: gardener
          secret:
            secretName: gardener-kubeconfig
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-server
  name: api-server
spec:
  selector:
    app: api-server
  ports:
  - name: grpc
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: grpc-gateway
    port: 8080
    protocol: TCP
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-server-auth
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    # TODO: make individual variable for this role to configure ingress annotations
    cert-manager.io/cluster-issuer: "{{ cert_manager_cluster_issuer }}"
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.api.ingressDNS }}
    http:
      paths:
      - backend:
          service:
            name: api-server
            port:
              number: 8080
        path: /auth
        pathType: Prefix
